version: '{build}'
clone_folder: C:\projects\meteor
os: Visual Studio 2015
environment:
  METEOR_PRETTY_OUTPUT: 0
  SELF_TEST_TOOL_NODE_FLAGS: " "
  TOOL_NODE_FLAGS: --expose-gc
  TIMEOUT_SCALE_FACTOR: 8
  METEOR_HEADLESS: true
  SELF_TEST_EXCLUDE: "\
      ^old cli tests|\
      ^minifiers can't register non-js|\
      ^minifiers: apps can't use|\
      ^compiler plugins - addAssets\
      "
platform:
  - x64
  - x86

matrix:
  fast_finish: true
  allow_failures:
    - platform: x64
    - platform: x86

# We don't need the actual "build", just the tests.
build: off

install:
  - ps: C:\projects\meteor\scripts\windows\appveyor\install.ps1

test_script:
  # For now, we're only running tests known to work on Windows, and
  # specifically, the more important ones.
  #   Notes:
  #      When using non-powershell, don't use single quotes.
  - ps: |
      $jUnit = Join-Path $env:TEMP 'self-test-junit-0.xml'
      $testList = @(
        'modules - test app'
        # 'autoupdate'
        # 'create$'
        # 'dynamic import'
        'colons'
      )
      $tests = $testList -Join '|'
      Write-Host "tests: $tests"
      $exclude = $env:SELF_TEST_EXCLUDE
      Write-Host "exclude: $exclude"
      & cmd.exe /C .\meteor.bat self-test --junit "$jUnit" "$tests" --exclude "$exclude" '2>&1'
      $selfTestExitCode = $LASTEXITCODE
      Write-Host "Self Test Exit $selfTestExitCode"
      If ($selfTestExitCode -ne 0) {
        Exit $selfTestExitCode
      }
      # Exit-AppVeyorBuild
      # .\meteor.bat self-test --junit "$jUnitOutput" "$($tests -Join '|')" --exclude "$env:Platform" 2>&1 | Write-Host

after_test:
# upload test results via rest-api
  - ps: |
        $wc = New-Object 'System.Net.WebClient'
        Get-ChildItem $env:TEMP 'self-test-junit-*.xml' | Foreach-Object {
          $wc.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", ($_.FullName))
        }

cache:
  - dev_bundle -> meteor
  - .babel-cache
  - .meteor
